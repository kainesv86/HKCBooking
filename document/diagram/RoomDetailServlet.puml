@startuml roomDetailServlet

hide footbox
mainframe <b>sd</b> Room detail Servlet
actor User
participant "Browser" as Browser
participant ":RoomDetailServlet" as RoomDetailServlet
participant ":GetVariable(request)" as GetVariable
participant ":ReviewService" as ReviewService
participant ":RoomDetailRepository" as RoomDetailRepository
participant ":RoomRepository" as RoomRepository
participant ":RoomTypeRepository" as RoomTypeRepository
participant ":ReviewRepository" as ReviewRepository

User ->> Browser: Click on room detail link
    activate Browser
        Browser ->> RoomDetailServlet : GET /RoomDetailServlet
        activate RoomDetailServlet
            RoomDetailServlet ->> GetVariable: getInt(String key, String label, int minValue, int maxValue, Integer defaultValue): Integer
            activate GetVariable
                GetVariable ->> RoomDetailServlet: roomId
            deactivate GetVariable

            alt roomId is null
                RoomDetailServlet ->> Browser: forward 404Page.jsp
            else roomId not null
                RoomDetailServlet ->> RoomDetailRepository: getRoomDetailByRoomId(Integer roomId): RoomDetail
                activate RoomDetailRepository
                RoomDetailRepository ->> Database: executeQuery()
                        activate Database 
                            Database ->> RoomDetailRepository: return result set
                        deactivate Database
                    RoomDetailRepository ->> RoomDetailServlet: return roomDetail
                deactivate RoomDetailRepository 
            end

            alt roomDetail is null
                RoomDetailServlet ->> Browser: forward 404Page.jsp
            else roomDetail not null
                RoomDetailServlet ->> RoomDetailServlet: Date minCheckIn = (Date) session.getAttribute("minCheckIn") 
                RoomDetailServlet ->> RoomDetailServlet: Date minCheckOut = (Date) session.getAttribute("minCheckOut")
                RoomDetailServlet ->> RoomDetailServlet: String checkInString = (String) session.getAttribute("checkIn")
                RoomDetailServlet ->> RoomDetailServlet: String checkOutString = (String) session.getAttribute("checkOut")
                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("checkIn", checkInString) 
                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("checkOut", checkOutString)

                alt minCheckIn is null or minCheckOut is null
                    RoomDetailServlet ->> RoomDetailServlet: minCheckIn = new Date(System.currentTimeMillis());
                    RoomDetailServlet ->> RoomDetailServlet: minCheckOut = Date.valueOf(minCheckIn.toLocalDate().plusDays(1))
                end

                RoomDetailServlet ->> ReviewRepository: getReviewByRoomId(Integer roomId): ArrayList<Review> 
                activate ReviewRepository
                ReviewRepository ->> Database: executeQuery()
                        activate Database 
                            Database ->> ReviewRepository: return result set
                        deactivate Database
                    ReviewRepository ->> RoomDetailServlet: return reviews
                deactivate ReviewRepository 

                RoomDetailServlet ->> ReviewService: reviewRateOverall(ArrayList<Review> reviews): Float
                activate ReviewService
                    ReviewRepository ->> RoomDetailServlet: return rateOverall
                deactivate ReviewService

                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("rateOverall", rateOverall) 
                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("reviews", reviews)
                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("minCheckIn", minCheckIn.toString())
                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("minCheckOut", minCheckOut.toString())
                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("roomDetail", roomDetail)
                RoomDetailServlet ->> RoomDetailServlet: request.setAttribute("roomId", roomId)
            
                RoomDetailServlet ->> Browser: forward roomDetail.jsp
        deactivate RoomDetailServlet 
            end
User ->> Browser: Submit form
    Browser -->> RoomDetailServlet: POST/RoomDetailServlet
    activate RoomDetailServlet
        RoomDetailServlet ->> GetVariable: getInt(String key, String label, int minValue, int maxValue, Integer defaultValue): Integer
        activate GetVariable
            GetVariable ->> RoomDetailServlet: return roomId

            RoomDetailServlet ->> GetVariable: getDate(String key, String label, Date defaultValue): Date
            GetVariable ->> RoomDetailServlet: return checkIn

            RoomDetailServlet ->> GetVariable: getDate(String key, String label, Date defaultValue): Date
            GetVariable ->> RoomDetailServlet: return checkOut
        deactivate GetVariable
    alt invalid data
        RoomDetailServlet ->> RoomDetailServlet: session.setAttribute("message", "End date and start date is required")
        RoomDetailServlet ->> Browser: sendRedirect("RoomDetailServlet" + "?roomId=" + roomId)    
    else valid data
        RoomDetailServlet ->> RoomRepository: getRoomById(Integer id): Room
        activate RoomRepository
            RoomRepository ->> Database: executeQuery()
                activate Database 
                    Database ->> RoomRepository: return result set
                deactivate Database
            RoomRepository ->> RoomDetailServlet: return room
        deactivate RoomRepository 
    end

    RoomDetailServlet ->> RoomDetailServlet: long days = ChronoUnit.DAYS.between(checkIn.toLocalDate(), uppercheckIn.toLocalDate()); 
    RoomDetailServlet ->> RoomDetailServlet: Float total = room.getPrice() * Math.abs(days)

    RoomDetailServlet ->> RoomDetailServlet: ArrayList<CartItem> cart = (ArrayList<CartItem>) session.getAttribute("cart")
    alt cart is null
        RoomDetailServlet ->> RoomDetailServlet: cart = new ArrayList<CartItem>();
    end

    RoomDetailServlet ->> RoomTypeRepository: getRoomTypeById(Integer id): RoomType
        activate RoomTypeRepository
            RoomTypeRepository ->> Database: executeQuery()
                activate Database 
                    Database ->> RoomTypeRepository: return result set
                deactivate Database
            RoomTypeRepository ->> RoomDetailServlet: return roomType
        deactivate RoomTypeRepository 
    RoomDetailServlet ->> RoomDetailServlet: cart.add(new CartItem(room, roomType.getRoomName(), checkIn, checkOut, total, ""));
    RoomDetailServlet ->> RoomDetailServlet: session.setAttribute("cart", cart)
    RoomDetailServlet ->> RoomDetailServlet: session.setAttribute("message", "Add cart successful")
    RoomDetailServlet ->> Browser: sendRedirect("RoomDetailServlet" + "?roomId=" + roomId)  
    deactivate RoomDetailServlet
deactivate Browser