
hide footbox
mainframe <b>sd</b> Cart Servlet
actor User
participant "Browser" as Browser
participant ":CartServlet" as CartServlet
participant ":UseGuard" as UseGuard
participant ":HistoryService" as HistoryService
participant ":UserRepository" as UserRepository
participant ":HistoryRepository" as HistoryRepository
participant ":Database" as Database

User ->> Browser: click cart link
activate Browser
    Browser -->> CartServlet: GET / CartServlet 
    activate CartServlet
        CartServlet ->> CartServlet: Integer userId = (Integer) session.getAttribute("userId");
        alt userId not null
            CartServlet ->> UserRepository: getUserByUserId(Integer id): User
            activate UserRepository
                UserRepository ->> Database: executeQuery()
                activate Database 
                    Database ->> UserRepository: return result set
                deactivate Database
                UserRepository ->> CartServlet: return user
            deactivate UserRepository

            CartServlet ->> CartServlet: session.setAttribute("user", user)
        end

        CartServlet ->> CartServlet: ArrayList<CartItem> cart = (ArrayList<CartItem>) session.getAttribute("cart")

        alt cart is null
            CartServlet ->> CartServlet: cart = new ArrayList<CartItem>();
        end 

        CartServlet ->> CartServlet: equest.setAttribute("cart", cart);
    deactivate CartServlet

User ->> Browser: Submit form
    Browser ->> CartServlet : POST / CartServlet   
    activate CartServlet
        CartServlet ->> CartServlet: String[] bookIndexs = request.getParameterValues("bookIndex")
        CartServlet ->> CartServlet: ArrayList<CartItem> cart = (ArrayList<CartItem>) session.getAttribute("cart")
    
    alt bookingIndexs is null or cart is null
        CartServlet ->> CartServlet: ArrayList<CartItem> cart = (ArrayList<CartItem>) session.getAttribute("cart")
        CartServlet ->> CartServlet: request.setAttribute("cart", cart)

        CartServlet ->> Browser: forward cart.jsp
    else
        CartServlet ->> UserRepository: getUserByUserId(Integer id): User
        activate UserRepository
            UserRepository ->> Database: executeQuery()
            activate Database 
                Database ->> UserRepository: return result set
            deactivate Database
            UserRepository ->> CartServlet: return user
        deactivate UserRepository

        CartServlet ->> CartServlet: CartItem cartItem = cart.get(Integer.valueOf(index)) (index from bookIndexs)

        CartServlet ->> HistoryRepository:  getAllHistoryByRoomId(Integer roomId): ArrayList<History>
        activate HistoryRepository
                HistoryRepository ->> Database: executeQuery()
                activate Database 
                    Database ->> HistoryRepository: return result set
                deactivate Database
                HistoryRepository ->> CartServlet: return histories
        deactivate HistoryRepository

        CartServlet ->> HistoryService: isValidDateBooking(ArrayList<History> histories, Date inputCheckIn, Date inputCheckOut): boolean
        activate HistoryService
            HistoryService ->> CartServlet: return isValidDate
        deactivate HistoryService

        alt not valid date
            CartServlet ->> CartServlet: cartItem.setError("This room had been booked by someone else, please try remove this in the cart and try to another date or another room")
            CartServlet ->> CartServlet: cart.set(Integer.valueOf(index), cartItem);  
        else valid date
            CartServlet ->> CartServlet: successBooked.add(cartItem);
            CartServlet ->> CartServlet: History history = new History(null, user.userId, message, historyStatus, user.fullname, user.phone, user.address, roomId, checkIn, checkOut, note, total)
            CartServlet ->> HistoryRepository: addHistory(History history):boolean
            activate HistoryRepository
                HistoryRepository ->> Database: executeQuery()
                activate Database 
                    Database ->> HistoryRepository: return result set
                deactivate Database
                HistoryRepository ->> CartServlet: return true
            deactivate HistoryRepository
        end

        CartServlet ->> CartServlet: while (!successBooked.isEmpty()) {cart.remove(successBooked.pop());}

        CartServlet ->> CartServlet: session.setAttribute("cart", cart)

        CartServlet ->> CartServlet: ArrayList<CartItem> cart = (ArrayList<CartItem>) session.getAttribute("cart");

        CartServlet ->> CartServlet: request.setAttribute("cart", cart);

        CartServlet ->> Browser: forward cart.jsp
        deactivate CartServlet
    deactivate Browser

    end



   


