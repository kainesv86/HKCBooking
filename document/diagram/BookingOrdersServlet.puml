@startuml bookingOrdersServlet

hide footbox
mainframe <b>sd</b> Booking Orders Servlet
actor User
participant "Browser" as Browser
participant ":BookingOrdersServlet" as BookingOrdersServlet
participant ":UseGuard" as UseGuard
participant ":GetVariable(request)" as GetVariable
participant ":HistoryDetailRepository" as HistoryDetailRepository
participant ":HistoryRepository" as HistoryRepository
participant "Database" as Database

User ->> Browser: Click on Add room type link
activate Browser
    Browser ->> BookingOrdersServlet: GET / BookingOrdersServlet
    activate BookingOrdersServlet
        BookingOrdersServlet -->> UseGuard: UseGuard.UserAuth(): boolean
        activate UseGuard 
            UseGuard -->> BookingOrdersServlet:return isLogin
        deactivate UseGuard

        alt not Login
            BookingOrdersServlet -->> Browser: sendRedirect("LoginServlet")
        else check User
            BookingOrdersServlet -->> UseGuard: UseGuard.UserRole("ADMIN"): boolean
            activate UseGuard 
                UseGuard -->> BookingOrdersServlet:return isAdmin
            deactivate UseGuard
            alt is not Admin
                BookingOrdersServlet -->> Browser: sendRedirect("IndexServlet")
            else is Admin
                BookingOrdersServlet ->> GetVariable: getString(String key, String label, int minLength, int maxLength, String defaultValue): String
                GetVariable ->> BookingOrdersServlet: status

                BookingOrdersServlet ->> HistoryDetailRepository: getAllHistoryDetail(String status): ArrayList<HistoryDetail>
                    activate HistoryDetailRepository
                        HistoryDetailRepository -->>  Database: executeQuery()
                            activate Database 
                                Database ->> HistoryDetailRepository: return result set
                            deactivate Database
                        HistoryDetailRepository -->> BookingOrdersServlet: return historyDetails
                    deactivate HistoryDetailRepository
                
                BookingOrdersServlet ->> BookingOrdersServlet: request.setAttribute("location", status)
                BookingOrdersServlet ->> BookingOrdersServlet: request.setAttribute("historyDetails", historyDetails)

                BookingOrdersServlet ->> Browser: forward bookingOrders.jsp
        deactivate BookingOrdersServlet
            end
        end

User ->> Browser: Submit form
    Browser ->> BookingOrdersServlet : POST / BookingOrdersServlet   
    
    BookingOrdersServlet ->> GetVariable: getString(String key, String label, int minLength, int maxLength, String defaultValue): String
    activate GetVariable
    GetVariable ->> BookingOrdersServlet: return location
    deactivate GetVariable

    alt location is null
        BookingOrdersServlet ->> BookingOrdersServlet: location = ""
    else location not null
        BookingOrdersServlet ->> BookingOrdersServlet: location = "?status=" + location
    end

    BookingOrdersServlet ->> GetVariable: getInt(String key, String label, int minValue, int maxValue, Integer defaultValue): Integer
    activate GetVariable
    GetVariable ->> BookingOrdersServlet: return historyId
    
    BookingOrdersServlet ->> GetVariable: getString(String key, String label, int minLength, int maxLength, String defaultValue): String
    GetVariable ->> BookingOrdersServlet: return historyStatus

    BookingOrdersServlet ->> GetVariable: getString(String key, String label, int minLength, int maxLength, String defaultValue): String
    GetVariable ->> BookingOrdersServlet: return message
    deactivate GetVariable

    alt invalid data
        BookingOrdersServlet ->> Browser: sendRedirect("BookingOrdersServlet" + location)   
    else
        BookingOrdersServlet ->> BookingOrdersServlet: History history = new History() 
        BookingOrdersServlet ->> BookingOrdersServlet: history.setHistoryId(historyId)
        BookingOrdersServlet ->> BookingOrdersServlet: history.setMessage(message)
        BookingOrdersServlet ->> BookingOrdersServlet: history.setHistoryStatus(historyStatus)

        BookingOrdersServlet ->> HistoryRepository:  updateHistoryByAdmin(History history): boolean
        activate HistoryRepository
            HistoryRepository -->>  Database: executeQuery()
                activate Database 
                    Database ->> HistoryRepository: return result set
                deactivate Database
            HistoryRepository -->> BookingOrdersServlet: return true
        deactivate HistoryRepository
        BookingOrdersServlet ->> Browser: sendRedirect("BookingOrdersServlet" + location)   
    deactivate BookingOrdersServlet
deactivate Browser
    end










